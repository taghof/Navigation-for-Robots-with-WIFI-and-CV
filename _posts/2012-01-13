---
layout: post
title: Compiling code for the AR.Drone
---

Purpose
=======
To document the build process when cross-compiling code to executed on an AR.Drone. Results are considered satisfactory if we can
compile a simple "hello world" program and execute the program on the drone, further we should be able to compile third-party libraries and likewise test them with simple programs on the drone.

Procedure
=========
The procedure for making and testing drone-executable code is rather simple: install a cross-compilation toolchain, make a "hello world" c program and cross compile it, transfer the program to the drone and execute it like any other program. The following steps assume that you are using a linux distro.

1.	To install the codesourcery toolchain follow the instruction on the [Nat-center website][1] or just download and run this [script][01](which originates from the Nat-center 		site).   
	Run the following command to enter your cross compilation environment:
		
		$ codesourcery-arm-2009q3.sh
	<br />
2.	Construct a simple C program, for instance:

		#include <stdio.h>

		int main ()
		{
		  printf ("Hello World!\n");
		}

	<br />Compile it for the AR.Drones ARM9 processor with the following command:

		$ arm-none-linux-gnueabi-gcc hello.c -o hello_arm

3.	Connect to the drone FTP server(assuming that you are already connected to the drone wifi) and put hello_arm on the drone. The server will place the file in
	/data/video/. Run the program like any other:

		# ./hello_arm 
		Hello World!

4.	So far so good...

Results
=======
